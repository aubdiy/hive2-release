PREHOOK: query: CREATE TABLE `test_table`( `col_1` int,`col_2` string,`col_3` string)
        CLUSTERED BY (col_1) INTO 4 BUCKETS
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test_table
POSTHOOK: query: CREATE TABLE `test_table`( `col_1` int,`col_2` string,`col_3` string)
        CLUSTERED BY (col_1) INTO 4 BUCKETS
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_table
PREHOOK: query: insert into test_table values(1, 'one', 'ONE'), (2, 'two', 'TWO'), (3,'three','THREE'),(4,'four','FOUR')
PREHOOK: type: QUERY
PREHOOK: Input: default@values__tmp__table__1
PREHOOK: Output: default@test_table
POSTHOOK: query: insert into test_table values(1, 'one', 'ONE'), (2, 'two', 'TWO'), (3,'three','THREE'),(4,'four','FOUR')
POSTHOOK: type: QUERY
POSTHOOK: Input: default@values__tmp__table__1
POSTHOOK: Output: default@test_table
POSTHOOK: Lineage: test_table.col_1 EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
POSTHOOK: Lineage: test_table.col_2 SIMPLE [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: test_table.col_3 SIMPLE [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col3, type:string, comment:), ]
PREHOOK: query: select * from test_table
PREHOOK: type: QUERY
PREHOOK: Input: default@test_table
#### A masked pattern was here ####
POSTHOOK: query: select * from test_table
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_table
#### A masked pattern was here ####
2	two	TWO
1	one	ONE
4	four	FOUR
3	three	THREE
PREHOOK: query: explain extended select col_1, col_2, col_3 from test_table where col_1 <> 2 order by col_2
PREHOOK: type: QUERY
POSTHOOK: query: explain extended select col_1, col_2, col_3 from test_table where col_1 <> 2 order by col_2
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: test_table
                  Statistics: Num rows: 4 Data size: 42 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Filter Operator
                    isSamplingPred: false
                    predicate: (col_1 <> 2) (type: boolean)
                    Statistics: Num rows: 4 Data size: 42 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: col_1 (type: int), col_2 (type: string), col_3 (type: string)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 4 Data size: 42 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col1 (type: string)
                        null sort order: a
                        sort order: +
                        Statistics: Num rows: 4 Data size: 42 Basic stats: COMPLETE Column stats: NONE
                        tag: -1
                        value expressions: _col0 (type: int), _col2 (type: string)
                        auto parallelism: false
            Execution mode: llap
            LLAP IO: no inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: test_table
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                    bucket_count 4
                    bucket_field_name col_1
                    columns col_1,col_2,col_3
                    columns.comments 
                    columns.types int:string:string
#### A masked pattern was here ####
                    name default.test_table
                    numFiles 4
                    numRows 4
                    rawDataSize 42
                    serialization.ddl struct test_table { i32 col_1, string col_2, string col_3}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 46
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                      bucket_count 4
                      bucket_field_name col_1
                      columns col_1,col_2,col_3
                      columns.comments 
                      columns.types int:string:string
#### A masked pattern was here ####
                      name default.test_table
                      numFiles 4
                      numRows 4
                      rawDataSize 42
                      serialization.ddl struct test_table { i32 col_1, string col_2, string col_3}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 46
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.test_table
                  name: default.test_table
            Truncated Path -> Alias:
              /test_table [test_table]
        Reducer 2 
            Execution mode: llap
            Needs Tagging: false
            Reduce Operator Tree:
              Select Operator
                expressions: VALUE._col0 (type: int), KEY.reducesinkkey0 (type: string), VALUE._col1 (type: string)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 4 Data size: 42 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  GlobalTableId: 0
#### A masked pattern was here ####
                  NumFilesPerFileSink: 1
                  Statistics: Num rows: 4 Data size: 42 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      properties:
                        columns _col0,_col1,_col2
                        columns.types int:string:string
                        escape.delim \
                        hive.serialization.extend.additional.nesting.levels true
                        serialization.escape.crlf true
                        serialization.format 1
                        serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  TotalFiles: 1
                  GatherStats: false
                  MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select col_1, col_2, col_3 from test_table where col_1 <> 2 order by col_2
PREHOOK: type: QUERY
PREHOOK: Input: default@test_table
#### A masked pattern was here ####
POSTHOOK: query: select col_1, col_2, col_3 from test_table where col_1 <> 2 order by col_2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_table
#### A masked pattern was here ####
4	four	FOUR
1	one	ONE
3	three	THREE
PREHOOK: query: explain extended select col_1, col_2, col_3 from test_table where col_1 = 2 order by col_2
PREHOOK: type: QUERY
POSTHOOK: query: explain extended select col_1, col_2, col_3 from test_table where col_1 = 2 order by col_2
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: test_table
                  Statistics: Num rows: 4 Data size: 42 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Filter Operator
                    isSamplingPred: false
                    predicate: (col_1 = 2) (type: boolean)
                    Statistics: Num rows: 2 Data size: 21 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: col_2 (type: string), col_3 (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 2 Data size: 21 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        null sort order: a
                        sort order: +
                        Statistics: Num rows: 2 Data size: 21 Basic stats: COMPLETE Column stats: NONE
                        tag: -1
                        value expressions: _col1 (type: string)
                        auto parallelism: false
            Execution mode: llap
            LLAP IO: no inputs
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  base file name: test_table
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  properties:
                    COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                    bucket_count 4
                    bucket_field_name col_1
                    columns col_1,col_2,col_3
                    columns.comments 
                    columns.types int:string:string
#### A masked pattern was here ####
                    name default.test_table
                    numFiles 4
                    numRows 4
                    rawDataSize 42
                    serialization.ddl struct test_table { i32 col_1, string col_2, string col_3}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 46
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      COLUMN_STATS_ACCURATE {"BASIC_STATS":"true"}
                      bucket_count 4
                      bucket_field_name col_1
                      columns col_1,col_2,col_3
                      columns.comments 
                      columns.types int:string:string
#### A masked pattern was here ####
                      name default.test_table
                      numFiles 4
                      numRows 4
                      rawDataSize 42
                      serialization.ddl struct test_table { i32 col_1, string col_2, string col_3}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      totalSize 46
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.test_table
                  name: default.test_table
            Truncated Path -> Alias:
              /test_table [test_table]
        Reducer 2 
            Execution mode: llap
            Needs Tagging: false
            Reduce Operator Tree:
              Select Operator
                expressions: 2 (type: int), KEY.reducesinkkey0 (type: string), VALUE._col0 (type: string)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 2 Data size: 21 Basic stats: COMPLETE Column stats: NONE
                File Output Operator
                  compressed: false
                  GlobalTableId: 0
#### A masked pattern was here ####
                  NumFilesPerFileSink: 1
                  Statistics: Num rows: 2 Data size: 21 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                  table:
                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                      properties:
                        columns _col0,_col1,_col2
                        columns.types int:string:string
                        escape.delim \
                        hive.serialization.extend.additional.nesting.levels true
                        serialization.escape.crlf true
                        serialization.format 1
                        serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                  TotalFiles: 1
                  GatherStats: false
                  MultiFileSpray: false

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select col_1, col_2, col_3 from test_table where col_1 = 2 order by col_2
PREHOOK: type: QUERY
PREHOOK: Input: default@test_table
#### A masked pattern was here ####
POSTHOOK: query: select col_1, col_2, col_3 from test_table where col_1 = 2 order by col_2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_table
#### A masked pattern was here ####
2	two	TWO
PREHOOK: query: drop table `test_table`
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@test_table
PREHOOK: Output: default@test_table
POSTHOOK: query: drop table `test_table`
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@test_table
POSTHOOK: Output: default@test_table
